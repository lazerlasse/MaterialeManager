@model MaterialeManager.Models.Case

@{
    ViewData["Title"] = "Detaljer";
}

<div>
    <h2>@Model.Titel</h2>
    <hr />
    <dl class="row">
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Description)
        </dd>
        @if (!string.IsNullOrEmpty(Model.Comments))
        {
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Comments)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.Comments)
            </dd>
        }
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.CaseState)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.CaseState)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.CaseOperatorID)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.CaseOperator.UserName)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.PhotographerID)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Photographer.UserName)
        </dd>
    </dl>
</div>
<div>
    @if ((await AuthorizationService.AuthorizeAsync(User, Model, CaseOperations.Update)).Succeeded)
    {
        <a asp-action="Edit" asp-route-id="@Model.CaseID">Rediger</a>
        <text> | </text>
    }

    <a asp-action="Index">Tilbage til oversigten</a>
</div>
